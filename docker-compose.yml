services:
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: 2.5s
      interval: 2.5s
      timeout: 15s
      retries: 5

  user_service:
    build:
      context: ./user_service
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${USER_DB_URL}
      - PYTHONPATH=/
    env_file:
      - .env
    volumes:
      - ./user_service/app:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - web
      - postgres

  meeting_service:
    build:
      context: ./meeting_service
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=${MEETING_DB_URL}
      - PYTHONPATH=/
    env_file:
      - .env
    volumes:
      - ./meeting_service/app:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - web
      - postgres

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"  # Management UI
      - "5672:5672"    # Application connection port
    networks:
      - web

networks:
  postgres:
  web:

volumes:
  postgres_data:
