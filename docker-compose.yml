services:
  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"   # The HTTP port
      - "8080:8080"  # The Web UI (enabled by --api.insecure)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/traefik.yml:/traefik.yml"
    networks:
      - web

  user_service:
    build:
      context: ./user_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=Host(`user.local`)"
      - "traefik.http.services.user-service.loadbalancer.server.port=8000"
    environment:
      - DATABASE_URL=${USER_DB_URL}
      - PYTHONPATH=/
    env_file:
      - .env
    volumes:
      - ./user_service/app:/app
    depends_on:
      - traefik
      - rabbitmq
      - postgres
    networks:
      - web

  meeting_service:
    build:
      context: ./meeting_service
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meeting-service.rule=Host(`meeting.local`)"
      - "traefik.http.services.meeting-service.loadbalancer.server.port=8001"
    environment:
      - DATABASE_URL=${MEETING_DB_URL}
      - PYTHONPATH=/
    env_file:
      - .env
    volumes:
      - ./meeting_service/app:/app
    depends_on:
      - traefik
      - rabbitmq
      - postgres
    networks:
      - web

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - postgres

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - web

networks:
  web:
  postgres:

volumes:
  postgres_data:
